/*
  Plik post_detail.js
  --------------------
  ObsÅ‚uguje dynamiczne wypeÅ‚nianie modali "SzczegÃ³Å‚y", "Edycja" i "UsuÅ„".
  - Po klikniÄ™ciu "SzczegÃ³Å‚y" wypeÅ‚nia dane w detailModal.
  - Po klikniÄ™ciu "Edytuj" zamyka "SzczegÃ³Å‚y" i otwiera "EdycjÄ™".
  - Po klikniÄ™ciu "UsuÅ„" otwiera modal potwierdzenia usuniÄ™cia.
  - Dynamicznie ustawia akcjÄ™ formularza edycji.
*/

/**
 * Pobiera wartoÅ›Ä‡ z atrybutu data-* przycisku.
 * JeÅ›li atrybut nie istnieje, zwraca wartoÅ›Ä‡ domyÅ›lnÄ….
 *
 * @param {HTMLElement} button - Przycisk z danymi
 * @param {string} attr - Nazwa atrybutu
 * @param {string} [fallback="Brak danych"] - WartoÅ›Ä‡ domyÅ›lna
 * @returns {string} - PobranÄ… wartoÅ›Ä‡ lub fallback
 */
function getDataAttrOrFallback(button, attr, fallback = "Brak danych") {
    return button.getAttribute(attr) || fallback;
}

// ðŸ”¹ Pobieramy referencje do modali
var detailModal = document.getElementById('detailModal');
var editModal = document.getElementById('editModal');
var deleteModal = document.getElementById('deleteModal');
var deleteButton = document.getElementById('confirmDelete');
var postIdToDelete = null;

// ðŸ”¹ ObsÅ‚uga modala "SzczegÃ³Å‚y"
if (detailModal) {
    detailModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;

        // WypeÅ‚nianie wartoÅ›ci modala szczegÃ³Å‚Ã³w przejazdu
        document.getElementById('detail-title').textContent = getDataAttrOrFallback(button, 'data-title');
        document.getElementById('detail-content').textContent = getDataAttrOrFallback(button, 'data-content');
        document.getElementById('detail-create_at').textContent = getDataAttrOrFallback(button, 'data-create_at');
        document.getElementById('detail-author').textContent = getDataAttrOrFallback(button, 'data-author');
        document.getElementById('detail-distance').textContent = getDataAttrOrFallback(button, 'data-distance');
        document.getElementById('detail-start_location').textContent = getDataAttrOrFallback(button, 'data-start_location');
        document.getElementById('detail-end_location').textContent = getDataAttrOrFallback(button, 'data-end_location');
        document.getElementById('detail-travel_time').textContent = getDataAttrOrFallback(button, 'data-travel_time');
        document.getElementById('detail-vehicle').textContent = getDataAttrOrFallback(button, 'data-vehicle');

        // ðŸ”¹ ObsÅ‚uga klikniÄ™cia "Edytuj" â†’ zamykamy modal szczegÃ³Å‚Ã³w, otwieramy edycjÄ™
        var editLink = document.getElementById('editLink');
        if (editLink) {
            editLink.setAttribute('data-id', button.getAttribute('data-id'));
            editLink.addEventListener('click', function () {
                var modalInstance = bootstrap.Modal.getInstance(detailModal);
                modalInstance.hide();

                var editModalInstance = new bootstrap.Modal(editModal);
                editModalInstance.show();
            });
        }
    });
}

// ðŸ”¹ ObsÅ‚uga modala "UsuÅ„"
if (deleteModal) {
    deleteModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;
        postIdToDelete = button.getAttribute('data-id');

        // Wstawienie tytuÅ‚u do modala
        var modalTitle = deleteModal.querySelector('#postTitle');
        modalTitle.textContent = getDataAttrOrFallback(button, 'data-title');
    });

    // Pobieranie tokena CSRF do Å¼Ä…dania POST
    const csrftoken = document.querySelector('[name=csrfmiddlewaretoken]').value;

    // ObsÅ‚uga przycisku potwierdzajÄ…cego usuniÄ™cie
    deleteButton.addEventListener('click', function () {
        fetch(`/posts/delete/${postIdToDelete}/`, {
            method: "POST", // ðŸ”¹ Zmieniono z DELETE na POST
            headers: {
                "X-CSRFToken": csrftoken,
                "X-Requested-With": "XMLHttpRequest",
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ post_id: postIdToDelete }) // ðŸ”¹ WysyÅ‚amy ID w treÅ›ci Å¼Ä…dania
        }).then(response => {
            if (response.ok) {
                document.getElementById(`post-${postIdToDelete}`).remove();
                var modalInstance = bootstrap.Modal.getInstance(deleteModal);
                modalInstance.hide();
            } else {
                alert("BÅ‚Ä…d: Nie udaÅ‚o siÄ™ usunÄ…Ä‡ przejazdu!");
            }
        }).catch(error => {
            alert("BÅ‚Ä…d poÅ‚Ä…czenia z serwerem!");
        });
    });
}
